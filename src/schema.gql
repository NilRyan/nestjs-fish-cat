# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserProfileOutput {
  id: String!
  email: String!
  aboutMe: String
  birthDate: DateTime!
  gender: Gender!
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""The users gender"""
enum Gender {
  Male
  Female
}

type AccessTokenOutput {
  accessToken: String!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

type ChatOutput {
  id: String!
  createdBy: UserProfileOutput!
  createdAt: DateTime!
  participants: [UserProfileOutput!]!
  messages: [MessagesOutput!]!
}

type MessagesOutput {
  chatId: String!
  chat: ChatOutput!
  authorId: String!
  author: UserProfileOutput!
  message: String!
  createdAt: DateTime!
}

type MessageOutput {
  author: UserProfileOutput!
  message: String!
  createdAt: String!
}

type LikeOutput {
  userId: String!
  judgedUserId: String!
  like: Boolean!
  chatId: String
}

type Query {
  users: [UserProfileOutput!]!
  user(id: String!): UserProfileOutput!
  login(loginInput: LoginInput!): AccessTokenOutput!
  getMatches: [UserProfileOutput!]!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  updateUserById(updateUserInput: UpdateUserInput!): UserProfileOutput!
  register(registerUserInput: RegisterUserInput!): UserProfileOutput!
  refreshToken(token: JWT!): Token!
  sendMessage(chatId: String!, message: String!): MessagesOutput!
  createChat(participantId: String!): ChatOutput!
  swipe(swipeInput: SwipeInput!): LikeOutput!
}

input UpdateUserInput {
  name: String
  email: String
  password: String
  birthDate: DateTime
  gender: Gender
  aboutMe: String
  id: ID!
}

input RegisterUserInput {
  name: String!
  email: String!
  password: String!
  birthDate: DateTime
  gender: Gender
  aboutMe: String!
}

input SwipeInput {
  judgedUserId: ID!
  like: Boolean!
}

type Subscription {
  listenToChat(chatId: String!): MessageOutput!
  matchAdded(userId: String!): LikeOutput!
}